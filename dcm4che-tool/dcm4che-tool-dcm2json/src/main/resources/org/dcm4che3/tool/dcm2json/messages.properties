usage=dcm2json [<options>] <dicom-file>
try=Try `dcm2json --help' for more information.
description=\nConvert <dicom-file> (or the standard input if <dicom-file> \= '-') \
in JSON presentation. Writes result to standard output.\n-\nOptions\:
example=\nExamples\:\n\
$ dcm2json image.dcm\n\
Write JSON representation of DICOM file image.dcm to standard output, \
including only a reference to the pixel data in image.dcm\n\
$ dcm2json --blk-file-dir\=/tmp/pixeldata/ - < image.dcm\n\
Write JSON representation of DICOM file image.dcm to standard output, \
including a reference to the extracted pixel data in file /tmp/pixeldata/blk\#\#\#\#\#.tmp
indent=use additional whitespace in JSON output
no-bulkdata=do not include bulkdata in JSON output; by default, references to \
bulkdata are included.
with-bulkdata=include bulkdata directly in JSON output; by default, only \
references to bulkdata are included.
blk-file-dir=directory were files with extracted bulkdata are stored if the \
DICOM object is read from "standard input; if not specified, files are stored \
into the default temporary-file directory
blk-file-prefix=prefix for generating file names for extracted bulkdata; \
'blk' by default
blk-file-suffix=suffix for generating file names for extracted bulkdata; \
'.tmp' by default
cat-blk-files=concatenate extracted bulkdata into one file
blk-spec=specify bulkdata attributes explicitly by JSON presentation in \
<json-file>
missing=missing file operand
too-many=too many arguments
